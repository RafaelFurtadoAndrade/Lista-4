Q6
#include <iostream>
using namespace std;

int main() {
    int lower_bound = 1;
    int upper_bound = 100;
    int guess;
    char response;

    cout << "Pense em um número entre 1 e 100 e pressione Enter." << endl;
    cout << "Eu vou tentar adivinhar o número em até 7 perguntas." << endl;
    cout << "Responda com '<' se o número que você pensou for menor," << endl;
    cout << "'>' se for maior, e '=' se eu acertar." << endl;
    cout << "Pressione Enter para começar...";
    cin.get(); // Aguarda o usuário pressionar Enter para começar

    while (true) {
        guess = lower_bound + (upper_bound - lower_bound) / 2; // encontra o número no intervalo
        cout << "O número que você pensou é " << guess << "?" << endl;
        cout << "Responda com '<', '>', ou '=': ";
        cin >> response;

        if (response == '=') {
            cout << "Eu acertei!" << endl;
            break;
        } else if (response == '<') {
            upper_bound = guess - 1; // limite superior
        } else if (response == '>') {
            lower_bound = guess + 1; // limite inferior
        }

        if (lower_bound > upper_bound) {
            cout << "Você trapaceou! Não há números dentro do intervalo fornecido." << endl;
            break;
        }
    }
    return 0;
}
Pense em um numero entre 1 e 100 e pressione Enter.
Eu tentarei adivinhar o numero em ate 7 perguntas.
Responda com '<' se o numero que vocÛ pensou for menor,
'>' se for maior, e '=' se eu acertar.
Pressione Enter para comecar...
O numero que voce pensou e 50?
Responda com '<', '>', ou '=': <
O numero que voce pensou e 25?
Responda com '<', '>', ou '=': <
O numero que voce pensou e 12?
Responda com '<', '>', ou '=': >
O numero que voce pensou e 18?
Responda com '<', '>', ou '=': <
O numero que voce pensou e 15?
Responda com '<', '>', ou '=': <
O numero que voce pensou e 13?
Responda com '<', '>', ou '=': =
Eu acertei!

--------------------------------
Process exited after 29.98 seconds with return value 0
Pressione qualquer tecla para continuar. . .
